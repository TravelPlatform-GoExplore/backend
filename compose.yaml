services:
  app:
    image: anaservinovska/goexplore_frontend
    build:
      context: ../travelplatform-frontend copy/TravelPlatform
    depends_on: [backend, database]
    environment:
      BACKEND_URL: "http://localhost:8080"
    ports:
      - "80:80"
    networks:
      - goexplore-network
  backend:
    image: anaservinovska/goexplore_backend
    build:
      context: .
    depends_on: [database]
    ports:
      - "8080:8080"
    environment:
      SPRING_APPLICATION_JSON: '{"spring.datasource.url":"jdbc:postgresql://database:5432/postgres"}'
    networks:
      - goexplore-network

  grafana:
    image: grafana/grafana-enterprise
    container_name: grafana
    restart: unless-stopped
    ports:
      - '3000:3000'
    volumes:
      - grafana_data:/var/lib/grafana
    networks:
      - goexplore-network

  database:
    image: postgres:latest
    container_name: postgres_container
    restart: always
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: postgres  # Database name
      POSTGRES_USER: postgres  # Username
      POSTGRES_PASSWORD: 12345678  # Password
    volumes:
      - postgres_data:/var/lib/postgresql/data  # Persistent data storage
    networks:
      - goexplore-network

volumes:
  postgres_data:
  grafana_data:

networks:
  goexplore-network:
    driver: bridge
